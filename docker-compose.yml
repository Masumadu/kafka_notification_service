version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: flask_notification_service
    environment:
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      FLASK_ENV: ${FLASK_ENV}
      REDIS_SERVER: ${REDIS_SERVER}
    command: 'flask run --host=0.0.0.0 --port=5001'
    ports:
      - 8001:5001
    networks:
      - notification_net
    volumes:
      - .:/app
    depends_on:
      - db
  db:
      image: postgres:12
      restart: always
      environment:
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_DB: ${DB_NAME}
      volumes:
        - $PWD/.dbdata:/var/lib/postgres
      ports:
        - 5428:5432
      networks:
        - notification_net
  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    image: flask_notification_service_consumer
    command: "python3 app/consumer.py"
    networks:
      - notification_net
    depends_on:
      - backend
      - celery_worker
  celery_worker:
      build:
        context: .
        dockerfile: Dockerfile
      image: flask_notification_service_celery_worker
      networks:
        - notification_net
      command: "celery -A app.celery_app:app worker -l INFO"
      volumes:
        - .:/app
      depends_on:
        - redis
  redis:
      image: redis:6.2.6-alpine
      command: redis-server
      ports:
          - '6380:6379'
      networks:
        - notification_net
networks:
  notification_net:
    external:
      name: authentication_network